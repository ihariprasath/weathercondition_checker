# -*- coding: utf-8 -*-
"""weathercondition.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BcYFEWC4mztsRzoYWoAUN0-wAjwNJMKR
"""

import pandas as pd
data=pd.read_csv('weather_data.csv')
data.head()

data.isnull().sum()

import numpy as np
import requests
import pandas
from keras.models import load_model
import numpy as np
from tensorflow import keras
from tensorflow.keras.layers import Dense
from keras import Sequential
from sklearn.model_selection import train_test_split

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
cols=['Condition']
data[cols]=data[cols].apply(le.fit_transform)
data.head()

columns_to_convert = ['Temp(C)',	'Temp(F)','Condition','Wind(mph)','Wind(kph)']

# Convert the specified columns to integers
data[columns_to_convert] = data[columns_to_convert].astype(int)

# Print the DataFrame to verify the conversion
print(data)

X = data[[ 'Temp(C)','Temp(F)','Wind(mph)','Wind(kph)','Humidity'

    ]].values
y = data['Condition'].values

X

y

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.5)
# X_train = X_train.astype('float32')
# y_train = y_train.astype('float32')

from tensorflow import keras
model=keras.Sequential()
model.add(keras.layers.Dense(100,input_dim=5,activation='relu'))
model.add(keras.layers.Dense(200,input_dim=100,activation='relu'))
model.add(keras.layers.Dense(200,input_dim=200,activation='relu'))
model.add(keras.layers.Dense(200,input_dim=100,activation='relu'))
model.add(keras.layers.Dense(200,input_dim=200,activation='relu'))
model.add(keras.layers.Dense(1,input_dim=200))

model.compile(loss='mean_squared_error', optimizer='adam',metrics="mse")

model.fit(X_train,y_train,epochs=100)

y_pred=model.predict(X_test)

model.save('weather.h5')

input_data=np.array([[12,34,43,12,23]])
new_pred=model.predict(input_data)

print("Predicted Condition:", new_pred[0][0])